basePath: /
definitions:
  get_all_data.Response:
    description: Структура ответа с данными песен и информацией о пагинации.
    properties:
      currentPage:
        type: integer
      maxPageSize:
        type: integer
      songs:
        items:
          $ref: '#/definitions/models.Data'
        type: array
      totalPages:
        type: integer
      totalSongs:
        type: integer
    type: object
  get_song.Response:
    description: Структура ответа с текстом песни и информацией о куплетах.
    properties:
      currentPage:
        type: integer
      maxVersesPerPage:
        type: integer
      totalPages:
        type: integer
      verses:
        items:
          type: string
        type: array
    type: object
  models.CustomTime:
    properties:
      time.Time:
        type: string
    type: object
  models.Data:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        $ref: '#/definitions/models.CustomTime'
      song:
        type: string
      text:
        type: string
    type: object
  models.SongAndGroup:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
host: localhost:8002
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a music library.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Music Library API
  version: "1.0"
paths:
  /get_data/songs:
    get:
      description: Получение данных библиотеки с фильтрацией по всем полям и пагинацией
        (метод GET).
      operationId: get-all-data
      parameters:
      - description: Имя группы
        in: query
        name: group
        type: string
      - description: Имя песни
        in: query
        name: song
        type: string
      - description: Дата релиза
        in: query
        name: releaseDate
        type: string
      - description: Текст песни
        in: query
        name: text
        type: string
      - description: Ссылка на песню
        in: query
        name: link
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Размер страницы
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/get_all_data.Response'
        "500":
          description: failed to get songs
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение данных библиотеки
  /get_data/text:
    get:
      description: Получение текста песни с пагинацией по куплетам (метод GET).
      operationId: get-song
      parameters:
      - description: Имя группы
        in: query
        name: group
        required: true
        type: string
      - description: Имя песни
        in: query
        name: song
        required: true
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Размер страницы
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/get_song.Response'
        "400":
          description: group and song parameters are required or any other errors
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failed to get song
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение текста песни
  /songs/:
    post:
      consumes:
      - application/json
      description: Добавление новой песни в формате JSON и запросе к внешнему API.
      operationId: add-song
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.SongAndGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Data'
        "400":
          description: failed to decode req-body or any other errors
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Добавление новой песни
  /songs/{id}:
    delete:
      description: Удаление песни по ID.
      operationId: delete-song
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: invalid ID or any other errors
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удаление песни
    patch:
      consumes:
      - application/json
      description: Изменение данных песни по ID.
      operationId: update-song
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные песни
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Data'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: failed to decode req-body or any other errors
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Изменение данных песни
swagger: "2.0"
